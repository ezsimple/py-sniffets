user www-data;
worker_processes auto;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events {
	worker_connections 768;
	# multi_accept on;
}

http {

	##
	# Basic Settings
	##

	sendfile on;
	tcp_nopush on;
	types_hash_max_size 2048;

	# 요청 제한 설정
	# 일반 웹사이트: rate=10r/s (초당 10개의 요청)
	# API 서버: rate=5r/s (초당 5개의 요청)
	# 정적 콘텐츠 제공: rate=20-50r/s (초당 20-50개의 요청, 캐싱이 잘 되어 있을 경우)
	# 2. 트래픽 패턴 분석 : 예를 들어, 특정 시간대에 트래픽이 급증하는 경우 해당 시간에 맞춰 rate를 조정가능
	# 3. 버스트 처리 : burst 파라미터를 설정하여 순간적으로 발생하는 트래픽을 처리할 수 있도록 합니다. 
	#    예를 들어, burst=5로 설정하면 초당 10개의 요청을 기본으로 하면서 
  #    순간적으로 5개의 추가 요청을 허용할 수 있습니다.

	# 시간대에 따라 요청 제한 변수 설정
	map $time_iso8601 $limit_reqs {
        default 0;  # 기본값은 요청 제한 없음
        "~^([0-9]{4}-[0-9]{2}-[0-9]{2})T(20|21|22|23|00|01|02|03|04|05|06|07|08):" 1;  # 20시 ~ 08시
  }
	limit_req_zone $binary_remote_addr zone=one:10m rate=10r/s;
	
	# server_tokens off;

	# server_names_hash_bucket_size 64;
	# server_name_in_redirect off;

	include /etc/nginx/mime.types;
	default_type application/octet-stream;

	##
	# SSL Settings
	##

	ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3; # Dropping SSLv3, ref: POODLE
	ssl_prefer_server_ciphers on;

	##
	# Logging Settings
	##

	access_log /var/log/nginx/access.log;
	error_log /var/log/nginx/error.log;

	##
	# Gzip Settings
	##

	gzip on;

	# gzip_vary on;
	# gzip_proxied any;
	# gzip_comp_level 6;
	# gzip_buffers 16 8k;
	# gzip_http_version 1.1;
	# gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

	##
	# Virtual Host Configs
	##

	include /etc/nginx/conf.d/*.conf;
	include /etc/nginx/sites-enabled/*;
}


#mail {
#	# See sample authentication script at:
#	# http://wiki.nginx.org/ImapAuthenticateWithApachePhpScript
#
#	# auth_http localhost/auth.php;
#	# pop3_capabilities "TOP" "USER";
#	# imap_capabilities "IMAP4rev1" "UIDPLUS";
#
#	server {
#		listen     localhost:110;
#		protocol   pop3;
#		proxy      on;
#	}
#
#	server {
#		listen     localhost:143;
#		protocol   imap;
#		proxy      on;
#	}
#}
