server {

    root /var/www/html;

    # Add index.php to the list if you are using PHP
    index index.html index.htm index.nginx-debian.html;

    server_name a1.mkeasy.kro.kr;

    location / {
				location /static/ {
						alias /home/ubuntu/py-sniffets/toy-project/static/; # 실제 static 파일 경로로 수정
				}
				limit_req zone=one burst=5 nodelay;  # 순간 최대 5개 요청 허용
        include uwsgi_params;
        uwsgi_pass unix:/tmp/toy-project.sock;  # uWSGI 소켓 경로
				try_files $uri @uwsgi;  # 요청된 URI가 없으면 uwsgi로 전달
    }
		location @uwsgi {
        include uwsgi_params;
        uwsgi_pass unix:/tmp/toy-project.sock;  # uWSGI 소켓 경로
    }

		# react-erp frontend 구조 설계
		location /erp {
				alias /home/ubuntu/work/react-erp/dist;  # 빌드 결과 경로
				try_files $uri $uri/ /erp/index.html;  # SPA를 위한 설정
		}

		# /hr_list 리쿠르팅 통계 챠트
		location /hr {
				location /hr/static/ {
						alias /home/ubuntu/oc/hr-server/app/static/; # 실제 static 파일 경로로 수정
				}
				limit_req zone=one burst=5 nodelay;  # 순간 최대 5개 요청 허용
        include uwsgi_params;
        uwsgi_pass unix:/tmp/hr-server.sock;  # uWSGI 소켓 경로
        uwsgi_param SCRIPT_NAME /hr;  # SCRIPT_NAME 설정
    }

		# 명언 clone API
    location /quotes {
        proxy_pass http://localhost:3355/quotes;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;  # 프로토콜 설정
        proxy_cache_bypass $http_upgrade;
				limit_req zone=one burst=5 nodelay;  # 순간 최대 5개 요청 허용
    }

		# 명언&번역 챗봇서비스
    location /chat/ws {  # WebSocket 경로
        proxy_pass http://localhost:4444/chat/ws;  # WebSocket 서버의 URL
        # WebSocket 관련 헤더 설정
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;  # 프로토콜 설정
        proxy_cache_bypass $http_upgrade;
				limit_req zone=one burst=5 nodelay;  # 순간 최대 5개 요청 허용
    }

    location /chat/ {
				location /chat/static/ {
						alias /home/ubuntu/py-sniffets/chat/v1/static/;  # 실제 static 파일 경로로 수정
				}
				limit_req zone=one burst=5 nodelay;  # 순간 최대 5개 요청 허용
        proxy_pass http://localhost:4444/chat/;  # FastAPI의 /api 경로로 전달
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;  # 추가: 프로토콜 설정
        proxy_cache_bypass $http_upgrade;
    }

    location /past-weather/ {
				location /past-weather/static/ {
						alias /home/ubuntu/py-sniffets/past-weather/static/;  # 실제 static 파일 경로로 수정
				}
				limit_req zone=one burst=5 nodelay;  # 순간 최대 5개 요청 허용
        proxy_pass http://localhost:3366/past-weather/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;  # 추가: 프로토콜 설정
        proxy_cache_bypass $http_upgrade;
    }

		# FastAPI를 이용한 단순 파일 다운로드 서버
    location /v1/ {
				location /v1/static/ {
						alias /home/ubuntu/py-sniffets/http_auth/v4/static/;  # 실제 static 파일 경로로 수정
				}
				limit_req zone=one burst=5 nodelay;  # 순간 최대 5개 요청 허용
        proxy_pass http://localhost:3333/v1/;  # FastAPI의 /api 경로로 전달
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;  # 추가: 프로토콜 설정
        proxy_cache_bypass $http_upgrade;
    }

		# location /static/ {
    # 		alias /home/ubuntu/py-sniffets/http_auth/v4/static/;  # 실제 static 파일 경로로 수정
    # }

    # keycloak 서버 reverse proxy 연결
    location /auth {
        proxy_pass http://localhost:18080/auth; # Keycloak이 실행 중인 호스트 및 포트로 변경
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Keycloak에서 처리할 수 있는 요청만 허용
        proxy_set_header X-Forwarded-Uri $uri;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;

        proxy_buffering off;
        proxy_request_buffering off;
				limit_req zone=one burst=5 nodelay;  # 순간 최대 5개 요청 허용
    }

    # location /bad {
    #    proxy_pass http://localhost:3100/;
    #    proxy_http_version 1.1;
    #    proxy_set_header Host $host;
    #    proxy_set_header X-Real-IP $remote_addr;
    #    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #    proxy_set_header X-Forwarded-Proto $scheme;
    # }

    # pdf 강의파일 보여주기
    # location.href=kakaotalk://web/openExternal?url=https://a1.mkeasy.kro.kr/lecture/python
    # 카카오톡 인앱브라우저에서 외부브라우저 호출하기 : https://burndogfather.com/271
    location /lecture/python {
			alias /var/www/html/yoon.html;
    	default_type text/html;
			limit_req zone=one burst=5 nodelay;  # 순간 최대 5개 요청 허용
    	try_files $uri =404;
    }

    location /lecture/python_for_yoon {
        alias /home/ubuntu/dl/무지_이쁜_유니를_위한_초간단_파이썬_강의.pdf;
        default_type application/pdf;
				limit_req zone=one burst=5 nodelay;  # 순간 최대 5개 요청 허용
        # add_header Content-Disposition 'inline; filename="무지_이쁜_유니를_위한_초간단_파이썬_강의.pdf"';
    }

    listen [::]:443 ssl ipv6only=on; # managed by Certbot
    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/a1.mkeasy.kro.kr/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/a1.mkeasy.kro.kr/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}

server {
   if ($host = a1.mkeasy.kro.kr) {
       return 301 https://$host$request_uri;
   } # managed by Certbot


   listen 80 default_server;
   listen [::]:80 default_server;

   server_name a1.mkeasy.kro.kr;
   return 404; # managed by Certbot

}
